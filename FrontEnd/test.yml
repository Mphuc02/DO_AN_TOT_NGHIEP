
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.7.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - clinic_internal_network
    
    broker:
        image: confluentinc/cp-server:7.7.0
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9101:9101"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: 'true'
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        networks:
            - clinic_internal_network
    
    control-center:
        image: confluentinc/cp-enterprise-control-center:7.7.0
        hostname: control-center
        container_name: control-center
        depends_on:
            - broker
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021
        networks:
            - clinic_internal_network
    
    authentication-database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3320:3306'
        networks:
            - clinic_internal_network
    
    chat-database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3308:3306'
        networks:
            - clinic_internal_network
    
    employee-database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3309:3306'
        networks:
            - clinic_internal_network
    
    examination_result_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3310:3306'
        networks:
            - clinic_internal_network
    
    greeting_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3311:3306'
        networks:
            - clinic_internal_network
    
    hospital_information_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3312:3306'
        networks:
            - clinic_internal_network
    
    medicine_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3313:3306'
        networks:
            - clinic_internal_network
    
    patient_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3314:3306'
        networks:
            - clinic_internal_network
    
    payment_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3316:3306'
        networks:
            - clinic_internal_network
    
    working_schedule_database:
        image: mysql:8.0
        environment:
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - '3315:3306'
        networks:
            - clinic_internal_network
    
    redis:
        image: docker.io/bitnami/redis:7.4
        container_name: cache_server
        environment:
            # ALLOW_EMPTY_PASSWORD is recommended only for development.
            - ALLOW_EMPTY_PASSWORD=yes
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
        ports:
            - '6379:6379'
        volumes:
            - 'redis_data:/bitnami/redis/data'
        networks:
            - clinic_internal_network
    
    discovery-server:
        image: minhphuc2405/discovery-server
        container_name: discovery-server
        ports:
            - '8761:8761'
        networks:
            - clinic_internal_network
    
    api-gateway:
        image: minhphuc2405/api-gateway
        container_name: api-gateway
        ports:
            - '9010:9010'
        environment:
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
        networks:
            - clinic_internal_network
    
    authentication-service:
        image: minhphuc2405/authentication
        container_name: authentication-service
        ports:
            - '8080:8080'
        environment:
            spring.datasource.url: jdbc:mysql://authentication-database:3306/authentication?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: authentication-service
        networks:
            - clinic_internal_network
    
    chat-service:
        image: minhphuc2405/chat
        container_name: chat-service
        ports:
            - '8090:8090'
        environment:
            spring.datasource.url: jdbc:mysql://chat-database:3306/chat?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: chat-servic
        networks:
            - clinic_internal_network
    
    employee-service:
        image: minhphuc2405/employee
        container_name: employee-service
        ports:
            - '8081:8081'
        environment:
            spring.datasource.url: jdbc:mysql://employee-database:3306/employee?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: employee-service
        networks:
            - clinic_internal_network
    
    examination-result-service:
        image: minhphuc2405/examination_result
        container_name: examination-result-service
        ports:
            - '8088:8088'
        environment:
            spring.datasource.url: jdbc:mysql://examination_result_database:3306/examination_result?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: examination-result-service
        networks:
            - clinic_internal_network
    
    greeting-service:
        image: minhphuc2405/greeting
        container_name: greeting-service
        ports:
            - '8083:8083'
        environment:
            spring.datasource.url: jdbc:mysql://greeting_database:3306/greeting?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: greeting-service
        networks:
            - clinic_internal_network
    
    hospital-information-service:
        image: minhphuc2405/hospital_information
        container_name: hospital-information-service
        ports:
            - '8084:8084'
        environment:
            spring.datasource.url: jdbc:mysql://hospital_information_database:3306/clinic_information?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: hospital-information-service
        networks:
            - clinic_internal_network
    
    medicine-service:
        image: minhphuc2405/medicine
        container_name: medicine-service
        ports:
            - '8089:8089'
        environment:
            spring.datasource.url: jdbc:mysql://medicine_database:3306/medicine?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: medicine-service
        networks:
            - clinic_internal_network
        
    patient-service:
        image: minhphuc2405/patient
        container_name: patient_service
        port:
            - '9035:9035'
        environment:
            spring.datasource.url: jdbc:mysql://patient_database:3306/patient?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: patient-service
            networks:
                - clinic_internal_network
    
    payment-service:
        image: minhphuc2405/payment
        container_name: payment_service
        ports:
            - '9011:9011'
        environment:
            spring.datasource.url: jdbc:mysql://payment_database:3306/payment?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: payment-service
        networks:
            - clinic_internal_network
    
    working-schedule-service:
        image: minhphuc2405/working_schedule
        container_name: working_schedule_service
        ports:
            - '8087:8087'
        environment:
            spring.datasource.url: jdbc:mysql://working_schedule_database:3306/working_schedule?createDatabaseIfNotExist=true
            spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            eureka.instance.hostname: working-schedule-service
        networks:
            - clinic_internal_network
    
    websocket-service:
        image: minhphuc2405/websocket
        container_name: websocket_service
        ports:
            - '8092:8092'
        environment:
            spring.kafka.bootstrap-servers: broker:29092
            spring.data.redis.host: redis
            eureka.client.service-url.defaultZone: http://discovery-server:8761/eureka
            minio.url: http://minio:9000
            ui.url: localhost:3000
            eureka.instance.hostname: websocket-service
        networks:
            - clinic_internal_network
    
    minio:
        image: minio/minio:latest
        container_name: minio
        environment:
            MINIO_ROOT_USER: root
            MINIO_ROOT_PASSWORD: 123456789
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_data:/data
        command: server /data --console-address ":9001"
        networks:
            - clinic_internal_network

volumes:
    redis_data:
        driver: local
    minio_data:
        driver: local

networks:
    clinic_internal_network:
        driver: overlay
        attachable: true

